# Generated by Django 5.0.4 on 2024-06-20 00:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Abonnement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('standard', 'Standard'), ('premium', 'Premium')], max_length=10)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Chapitre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Cours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('niveau', models.CharField(max_length=10)),
                ('type', models.CharField(choices=[('texte', 'Texte'), ('video', 'Vidéo'), ('image', 'Image'), ('pdf', 'PDF')], max_length=10)),
                ('contenu', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Lecon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('contenu', models.TextField()),
                ('chapitre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elearning.chapitre')),
            ],
        ),
        migrations.CreateModel(
            name='Exercice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('qcm', 'QCM'), ('question-reponse', 'Question-Réponse'), ('calcul', 'Calcul')], max_length=20)),
                ('question', models.TextField()),
                ('reponse', models.TextField()),
                ('lecon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elearning.lecon')),
            ],
        ),
        migrations.AddField(
            model_name='chapitre',
            name='matiere',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elearning.matiere'),
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('niveau', models.CharField(choices=[('6e', '6e'), ('5e', '5e'), ('4e', '4e'), ('3e', '3e'), ('2e', '2e'), ('1e', '1e'), ('terminale', 'Terminale')], max_length=10)),
                ('role', models.CharField(choices=[('eleve', 'Élève'), ('enseignant', 'Enseignant'), ('administrateur', 'Administrateur')], max_length=15)),
                ('code_authentification', models.CharField(max_length=6)),
                ('valide', models.BooleanField(default=False)),
                ('abonnement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elearning.abonnement')),
                ('groups', models.ManyToManyField(related_name='utilisateur_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='utilisateur_permissions_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('moyen_paiement', models.CharField(choices=[('orange_money', 'Orange Money'), ('moov_money', 'Moov Money')], max_length=20)),
                ('date_transaction', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(max_length=20)),
                ('eleve', models.ForeignKey(limit_choices_to={'role': 'eleve'}, on_delete=django.db.models.deletion.CASCADE, to='elearning.utilisateur')),
            ],
        ),
        migrations.AddField(
            model_name='lecon',
            name='enseignant',
            field=models.ForeignKey(limit_choices_to={'role': 'enseignant'}, on_delete=django.db.models.deletion.CASCADE, to='elearning.utilisateur'),
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('niveau', models.CharField(max_length=10)),
                ('code_authentification', models.CharField(max_length=6)),
                ('valide', models.BooleanField(default=False)),
                ('eleve', models.ForeignKey(limit_choices_to={'role': 'eleve'}, on_delete=django.db.models.deletion.CASCADE, to='elearning.utilisateur')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('qcm', 'QCM'), ('question-reponse', 'Question-Réponse'), ('calcul', 'Calcul')], max_length=20)),
                ('question', models.TextField()),
                ('reponse_attendue', models.TextField()),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elearning.cours')),
                ('enseignant', models.ForeignKey(limit_choices_to={'role': 'enseignant'}, on_delete=django.db.models.deletion.CASCADE, to='elearning.utilisateur')),
            ],
        ),
        migrations.AddField(
            model_name='cours',
            name='enseignant',
            field=models.ForeignKey(limit_choices_to={'role': 'enseignant'}, on_delete=django.db.models.deletion.CASCADE, to='elearning.utilisateur'),
        ),
    ]
